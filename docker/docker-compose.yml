version: '3.5'
services:

  mongo:
    image: mongo:${MONGO_VERSION}
    deploy:
        placement:
            constraints:
              - node.labels.reliability == high
    volumes:
      - mongo_data:/data/db
    networks:
      back_net:
        aliases:
          - post_db
          - comment_db

  post:
    image: ${USER_NAME}/post:${POST_VERSION}
    deploy:
        restart_policy:
            condition: on-failure
            max_attempts: 15
            delay: 1s
        resources:
            limits:
                cpus: "0.3"
                memory: 300M
        mode: replicated
        replicas: 5
        update_config:
            delay: 10s
            parallelism: 2
            failure_action: rollback
        placement:
            constraints:
              - node.role == worker
              - node.labels.monitoring != 1
    networks:
      - front_net
      - back_net

  comment:
    image: ${USER_NAME}/comment:${COMMENT_VERSION}
    deploy:
        restart_policy:
            condition: on-failure
            max_attempts: 10
            delay: 1s
        resources:
            limits:
                cpus: "0.3"
                memory: 300M
        mode: replicated
        replicas: 5
        update_config:
            delay: 10s
            parallelism: 2
            failure_action: rollback
        placement:
            constraints:
              - node.role == worker
              - node.labels.monitoring != 1
    networks:
      - front_net
      - back_net

  ui:
    image: ${USER_NAME}/ui:${UI_VERSION}
    deploy:
        restart_policy:
            condition: on-failure
            max_attempts: 3
            delay: 3s
        resources:
            limits:
                cpus: "0.25"
                memory: 150M
        mode: replicated
        replicas: 5
        update_config:
            delay: 5s
            parallelism: 1
            failure_action: pause
        placement:
            constraints:
              - node.role == worker
              - node.labels.monitoring != 1
    ports:
      - "${UI_PORT}:9292/tcp"
    networks:
      - front_net

volumes:
  mongo_data: {}

networks:
  back_net: {}
  front_net: {}
